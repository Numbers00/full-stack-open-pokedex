name: Deployment pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]
    types: [opened, synchronize]
  
env:
  COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - run: npm run eslint # names are optional
      - run: npm run build
      - run: npm run test
      - name: e2e tests
        uses: cypress-io/github-action@v5
        with:
          command: npm run test:e2e
          start: npm run start-prod
          wait-on: http://localhost:5000
      - name: Trigger deployment
        # if it's a PR that's merged, not just a new PR request
        if: github.event_name == 'push' && !contains(join(env.COMMIT_MESSAGES, ' '), '#skip')
        run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}
      - name: Check non-existent site
        uses: jtalk/url-health-check-action@v3
        with:
          url: https://full-stack-open-pokedex-fld5.onrender.com
      
  tag_release:
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          fetch-depth: '0'
      - name: Bump version and push tag
        if: github.event_name == 'push' && !contains(join(env.COMMIT_MESSAGES, ' '), '#skip')
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # this secret is automatically generated, equivalent to ${{ github.token }}
          DEFAULT_BUMP: patch

  discord_notification:
    needs: [simple_deployment_pipeline, tag_release]
    runs-on: ubuntu-20.04
    if: always()
    steps:
      - name: Build and tagging successful
        uses: rjstone/discord-webhook-notify@v1
        # the always() is necessary to ensure the job runs even if the previous jobs fail
        if: needs.simple_deployment_pipeline.result == 'success' && needs.tag_release.result == 'success'
        with:
          severity: info
          details: build and tagging successful
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Build and tagging not successful
        uses: rjstone/discord-webhook-notify@v1
        if: needs.simple_deployment_pipeline.result == 'failure' || needs.tag_release.result == 'failure'
        with:
          severity: error
          details: |
            build and tagging failed
            Job: ${{ github.job }}
            Workflow: ${{ github.workflow }}
            Run ID: ${{ github.run_id }}
            Run: ${{ github.run_number }}
            Commit: ${{ github.sha }}
            Ref: ${{ github.ref }}
            Event: ${{ github.event_name }}
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
